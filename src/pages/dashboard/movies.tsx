import { useQuery } from "@apollo/client";
import {
  Badge,
  Breadcrumb,
  Card,
  Sidebar,
  Spinner,
  Table,
} from "flowbite-react";
import { type NextPage } from "next";
import Head from "next/head";
import { Disc, House, UsersThree, VideoCamera } from "phosphor-react";
import React from "react";
import ProtectedPage from "../../components/layout/ProtectedPage";
import Logo from "../../components/Logo";
import { GET_MOVIES } from "../../graphql/queries";
import {
  type Movie,
  type Person,
  type ProductionCompany,
} from "../../graphql/types";

const Movies: NextPage = () => {
  const { data, loading } = useQuery(GET_MOVIES);

  return (
    <>
      <Head>
        <title>IMDD</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ProtectedPage>
        <main className="dark flex max-h-screen min-h-screen min-w-full flex-row bg-gradient-to-r from-[#0d0d0e] to-[#0a0b0d]">
          <div className="flex max-h-screen w-1/6 flex-col px-6 py-8">
            <div className="mb-20">
              <Logo />
            </div>
            <Sidebar className="w-full !bg-gradient-to-r !from-[#0d0d0e] !to-[#0a0b0d]">
              <Sidebar.Items>
                <Sidebar.ItemGroup>
                  <Sidebar.Item
                    href="/dashboard"
                    className="!text-[#afadbd]"
                    icon={House}
                  >
                    Dashboard
                  </Sidebar.Item>
                  <Sidebar.Item
                    href="/dashboard/movies"
                    className="!text-[#afadbd]"
                    icon={Disc}
                  >
                    Movies
                  </Sidebar.Item>
                  <Sidebar.Item
                    href="/dashboard/people"
                    className="!text-[#afadbd]"
                    icon={UsersThree}
                  >
                    People
                  </Sidebar.Item>
                  <Sidebar.Item
                    href="/dashboard/companies"
                    className="!text-[#afadbd]"
                    icon={VideoCamera}
                  >
                    Companies
                  </Sidebar.Item>
                </Sidebar.ItemGroup>
              </Sidebar.Items>
            </Sidebar>
          </div>
          <div className="flex w-5/6 flex-col">
            <div className="flex h-[15vh] w-full flex-col items-start justify-between bg-gradient-to-r from-[#3126b0] to-[#6d2fc4] py-8 px-10">
              <Breadcrumb aria-label="Breadcrumbs">
                <Breadcrumb.Item href="/dashboard">Dashboard</Breadcrumb.Item>
                <Breadcrumb.Item href="/dashboard/movies">
                  Movies
                </Breadcrumb.Item>
              </Breadcrumb>
              <h1 className="text-4xl font-bold tracking-tight text-white">
                IMDD Movie List
              </h1>
            </div>
            <div className="flex h-[75vh] w-full flex-col items-start p-10">
              <Card>
                {loading ? (
                  <Spinner size="xl"></Spinner>
                ) : (
                  <Table>
                    <Table.Head>
                      <Table.HeadCell>ID</Table.HeadCell>
                      <Table.HeadCell>Title</Table.HeadCell>
                      <Table.HeadCell>Released</Table.HeadCell>
                      <Table.HeadCell>Tagline</Table.HeadCell>
                      <Table.HeadCell>Cast</Table.HeadCell>
                      <Table.HeadCell>Directors</Table.HeadCell>
                      <Table.HeadCell>Production Company</Table.HeadCell>
                    </Table.Head>
                    <Table.Body>
                      {data.movies.map((movie: Movie, index: number) => (
                        <Table.Row key={index}>
                          <Table.Cell>{movie.id}</Table.Cell>
                          <Table.Cell>{movie.title}</Table.Cell>
                          <Table.Cell>{movie.released}</Table.Cell>
                          <Table.Cell>{movie.tagline}</Table.Cell>
                          <Table.Cell>
                            {movie.cast ? (
                              <div className="flex max-h-12 max-w-lg flex-wrap gap-2 overflow-scroll">
                                {movie.cast?.map(
                                  (castMember: Person, index: number) => (
                                    <Badge color="gray" key={index}>
                                      {castMember.firstName}{" "}
                                      {castMember.lastName}
                                    </Badge>
                                  )
                                )}
                              </div>
                            ) : (
                              <>N/A</>
                            )}
                          </Table.Cell>
                          <Table.Cell>
                            {movie.directors ? (
                              <div className="flex max-h-12 max-w-lg flex-wrap gap-2 overflow-scroll">
                                {movie.directors?.map(
                                  (director: Person, index: number) => (
                                    <Badge color="gray" key={index}>
                                      {director.firstName} {director.lastName}
                                    </Badge>
                                  )
                                )}
                              </div>
                            ) : (
                              <>N/A</>
                            )}
                          </Table.Cell>
                          <Table.Cell>
                            {movie.producedBy ? (
                              <div className="flex max-h-12 max-w-lg flex-wrap gap-2 overflow-scroll">
                                {movie.producedBy?.map(
                                  (
                                    studio: ProductionCompany,
                                    index: number
                                  ) => (
                                    <Badge color="gray" key={index}>
                                      {studio.name}
                                    </Badge>
                                  )
                                )}
                              </div>
                            ) : (
                              <>N/A</>
                            )}
                          </Table.Cell>
                        </Table.Row>
                      ))}
                    </Table.Body>
                  </Table>
                )}
              </Card>
            </div>
          </div>
        </main>
      </ProtectedPage>
    </>
  );
};

export default Movies;
